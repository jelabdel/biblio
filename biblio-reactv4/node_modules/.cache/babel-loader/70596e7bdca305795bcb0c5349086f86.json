{"ast":null,"code":"import * as actionTypes from './constants';\nexport const listBooks = (books, language) => {\n  return {\n    type: actionTypes.LIST_BOOKS,\n    books,\n    language\n  };\n};\nexport const addBook = () => dispatch => {\n  dispatch({\n    type: actionTypes.ADD_BOOK_PENDING\n  });\n  fetch('http://localhost:3001').then(response.json()).then(data => dispatch({\n    type: actionTypes.ADD_BOOKS_SUCCES,\n    payload: data\n  })).catch(error => dispatch({\n    type: actionTypes.ADD_BOOKS_FAILED,\n    payload: error\n  }));\n};\nexport const requestBooks = () => dispatch => {\n  dispatch({\n    type: actionTypes.REQUEST_BOOKS_PENDING\n  });\n  fetch('http://localhost:3001').then(response => response.json()).then(data => dispatch({\n    type: actionTypes.REQUEST_BOOKS_SUCCES,\n    payload: data\n  })).catch(error => dispatch({\n    type: actionTypes.REQUEST_BOOKS_FAILED,\n    payload: error\n  }));\n};","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV3/biblio-reactv3/src/redux/actions/libraryActions.js"],"names":["actionTypes","listBooks","books","language","type","LIST_BOOKS","addBook","dispatch","ADD_BOOK_PENDING","fetch","then","response","json","data","ADD_BOOKS_SUCCES","payload","catch","error","ADD_BOOKS_FAILED","requestBooks","REQUEST_BOOKS_PENDING","REQUEST_BOOKS_SUCCES","REQUEST_BOOKS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,aAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC1C,SAAO;AACHC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,UADf;AAEHH,IAAAA,KAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH,CANM;AASP,OAAO,MAAMG,OAAO,GAAG,MAAOC,QAAD,IAAc;AACvCA,EAAAA,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ;AAApB,GAAD,CAAR;AACAC,EAAAA,KAAK,CAAC,uBAAD,CAAL,CACKC,IADL,CACUC,QAAQ,CAACC,IAAT,EADV,EAEKF,IAFL,CAEUG,IAAI,IAAIN,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEJ,WAAW,CAACc,gBAApB;AAAsCC,IAAAA,OAAO,EAAEF;AAA/C,GAAD,CAF1B,EAGKG,KAHL,CAGWC,KAAK,IAAIV,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEJ,WAAW,CAACkB,gBAApB;AAAsCH,IAAAA,OAAO,EAAEE;AAA/C,GAAD,CAH5B;AAKH,CAPM;AASP,OAAO,MAAME,YAAY,GAAG,MAAOZ,QAAD,IAAc;AAC5CA,EAAAA,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEJ,WAAW,CAACoB;AAApB,GAAD,CAAR;AACAX,EAAAA,KAAK,CAAC,uBAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIN,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEJ,WAAW,CAACqB,oBAApB;AAA0CN,IAAAA,OAAO,EAAEF;AAAnD,GAAD,CAF1B,EAGKG,KAHL,CAGWC,KAAK,IAAIV,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEJ,WAAW,CAACsB,oBAApB;AAA0CP,IAAAA,OAAO,EAAEE;AAAnD,GAAD,CAH5B;AAKH,CAPM","sourcesContent":["import * as actionTypes from './constants'\n\nexport const listBooks = (books, language) => {\n    return {\n        type: actionTypes.LIST_BOOKS,\n        books,\n        language\n    }\n}\n\n\nexport const addBook = () => (dispatch) => {\n    dispatch({ type: actionTypes.ADD_BOOK_PENDING })\n    fetch('http://localhost:3001')\n        .then(response.json())\n        .then(data => dispatch({ type: actionTypes.ADD_BOOKS_SUCCES, payload: data }))\n        .catch(error => dispatch({ type: actionTypes.ADD_BOOKS_FAILED, payload: error }))\n\n}\n\nexport const requestBooks = () => (dispatch) => {\n    dispatch({ type: actionTypes.REQUEST_BOOKS_PENDING })\n    fetch('http://localhost:3001')\n        .then(response => response.json())\n        .then(data => dispatch({ type: actionTypes.REQUEST_BOOKS_SUCCES, payload: data }))\n        .catch(error => dispatch({ type: actionTypes.REQUEST_BOOKS_FAILED, payload: error }))\n\n}"]},"metadata":{},"sourceType":"module"}