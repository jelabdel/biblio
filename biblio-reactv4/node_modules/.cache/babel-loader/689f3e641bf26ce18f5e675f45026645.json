{"ast":null,"code":"import * as actionTypes from '../actions/constants';\nconst initialState = {\n  currentUser: {\n    name: window\n  },\n  isPending: false,\n  error: ''\n};\nexport const signUpUser = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case actionTypes.SIGNUP_USER_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case actionTypes.SIGNUP_USER_SUCCESS:\n      // console.log('actionPayload in signupUser:', action.payload)\n      return Object.assign({}, state, {\n        currentUser: action.payload,\n        isPending: false\n      });\n\n    case actionTypes.SIGNUP_USER_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};\nexport const signOutUser = (state = initialState, action) => {\n  console.log(\"Initialstate in signOutUser\", initialState);\n\n  if (action.type === actionTypes.SIGNOUT_USER) {\n    return Object.assign({}, state, {\n      currentUser: {}\n    });\n  }\n};","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV3/biblio-reactv3/src/redux/reducers/userReducer.js"],"names":["actionTypes","initialState","currentUser","name","window","isPending","error","signUpUser","state","action","type","SIGNUP_USER_PENDING","Object","assign","SIGNUP_USER_SUCCESS","payload","SIGNUP_USER_FAILED","signOutUser","console","log","SIGNOUT_USER"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,sBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE;AAAEC,IAAAA,IAAI,EAAEC;AAAR,GADI;AAEjBC,EAAAA,SAAS,EAAE,KAFM;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAOA,OAAO,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAM,GAAG,EAAhC,KAAuC;AAC7D,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKV,WAAW,CAACW,mBAAjB;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAzB,CAAP;;AACJ,SAAKL,WAAW,CAACc,mBAAjB;AACI;AACA,aAAOF,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEN,QAAAA,WAAW,EAAEO,MAAM,CAACM,OAAtB;AAA+BV,QAAAA,SAAS,EAAE;AAA1C,OAAzB,CAAP;;AACJ,SAAKL,WAAW,CAACgB,kBAAjB;AACI,aAAOJ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEF,QAAAA,KAAK,EAAEG,MAAM,CAACM,OAAhB;AAAyBV,QAAAA,SAAS,EAAE;AAApC,OAAzB,CAAP;;AACJ;AACI,aAAOG,KAAP;AAVR;AAYH,CAbM;AAeP,OAAO,MAAMS,WAAW,GAAG,CAACT,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACzDS,EAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2ClB,YAA3C;;AACA,MAAIQ,MAAM,CAACC,IAAP,KAAgBV,WAAW,CAACoB,YAAhC,EAA8C;AAC1C,WAAOR,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEN,MAAAA,WAAW,EAAE;AAAf,KAAzB,CAAP;AACH;AAEJ,CANM","sourcesContent":["import * as actionTypes from '../actions/constants';\n\nconst initialState = {\n    currentUser: { name: window },\n    isPending: false,\n    error: ''\n}\n\n\nexport const signUpUser = (state = initialState, action = {}) => {\n    switch (action.type) {\n\n        case actionTypes.SIGNUP_USER_PENDING:\n            return Object.assign({}, state, { isPending: true })\n        case actionTypes.SIGNUP_USER_SUCCESS:\n            // console.log('actionPayload in signupUser:', action.payload)\n            return Object.assign({}, state, { currentUser: action.payload, isPending: false })\n        case actionTypes.SIGNUP_USER_FAILED:\n            return Object.assign({}, state, { error: action.payload, isPending: false })\n        default:\n            return state;\n    }\n}\n\nexport const signOutUser = (state = initialState, action) => {\n    console.log(\"Initialstate in signOutUser\", initialState)\n    if (action.type === actionTypes.SIGNOUT_USER) {\n        return Object.assign({}, state, { currentUser: {} })\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}