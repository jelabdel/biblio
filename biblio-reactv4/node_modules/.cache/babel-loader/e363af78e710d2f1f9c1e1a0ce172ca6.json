{"ast":null,"code":"var _jsxFileName = \"/Users/jamala/Dropbox/Projects/BIBLIOV3/biblio-reactv3/src/containers/AddBook.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addBook } from '../redux/actions/libraryActions';\nimport { Form, Button } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass AddBook extends Component {\n  constructor() {\n    super();\n\n    this.onSubmitHandle = event => {\n      event.preventDefault();\n      this.props.onHandleSubmit(this.state); // fetch('http://localhost:3001/add', {\n      //     method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      //     headers: {\n      //       'Content-Type': 'application/json'\n      //       // 'Content-Type': 'application/x-www-form-urlencoded',\n      //     },\n      //     body: JSON.stringify(this.state) // body data type must match \"Content-Type\" header\n      //   });\n    };\n\n    this.onTitleChange = event => {\n      this.setState({\n        title: event.target.value\n      });\n    };\n\n    this.onAuthorChange = event => {\n      this.setState({\n        author: event.target.value\n      });\n    };\n\n    this.onImageChange = event => {\n      this.setState({\n        image: event.target.value\n      });\n    };\n\n    this.onLanguageChange = event => {\n      this.setState({\n        lang: event.target.value\n      });\n    };\n\n    this.onIsReadChange = event => {\n      this.setState({\n        isread: event.target.value\n      });\n    };\n\n    this.state = {\n      title: '',\n      author: '',\n      lang: '',\n      isread: '',\n      image: ''\n    };\n  }\n\n  render() {\n    console.log(this.props.book);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"ADD BOOK\"), React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"formBasicText1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      onChange: this.onTitleChange,\n      type: \"text\",\n      placeholder: \"Enter title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      onChange: this.onAuthorChange,\n      controlId: \"formBasicText\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Author\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicText2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"Image\"), React.createElement(Form.Control, {\n      onChange: this.onImageChange,\n      type: \"text\",\n      placeholder: \"Enter Image Name eg image.jpg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicText3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Language\"), React.createElement(Form.Control, {\n      onChange: this.onLanguageChange,\n      type: \"text\",\n      placeholder: \"Enter Language\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"formBasicText4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"IsRead\"), React.createElement(Form.Control, {\n      onChange: this.onIsReadChange,\n      type: \"text\",\n      placeholder: \"Have you read it?\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.onSubmitHandle,\n      className: \"book-button\",\n      variant: \"outline-light\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(NavLink, {\n      to: '/add',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nconst mapDispatchToProps = (dispatch, book) => {\n  return {\n    onHandleSubmit: () => dispatch(addBook(book))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AddBook);","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV3/biblio-reactv3/src/containers/AddBook.js"],"names":["React","Component","connect","addBook","Form","Button","NavLink","AddBook","constructor","onSubmitHandle","event","preventDefault","props","onHandleSubmit","state","onTitleChange","setState","title","target","value","onAuthorChange","author","onImageChange","image","onLanguageChange","lang","onIsReadChange","isread","render","console","log","book","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addBook } from '../redux/actions/libraryActions'\n\nimport { Form, Button } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\n\n\n\n\nclass AddBook extends Component {\n    constructor() {\n        super();\n        this.state = {\n            title: '',\n            author: '',\n            lang: '',\n            isread: '',\n            image: ''\n        }\n    }\n    onSubmitHandle = (event) => {\n        event.preventDefault()\n        this.props.onHandleSubmit(this.state)\n        // fetch('http://localhost:3001/add', {\n        //     method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        //     headers: {\n        //       'Content-Type': 'application/json'\n        //       // 'Content-Type': 'application/x-www-form-urlencoded',\n        //     },\n\n        //     body: JSON.stringify(this.state) // body data type must match \"Content-Type\" header\n        //   });\n\n\n    }\n\n    onTitleChange = (event) => {\n        this.setState({ title: event.target.value });\n    }\n    onAuthorChange = (event) => {\n        this.setState({ author: event.target.value });\n    }\n\n    onImageChange = (event) => {\n        this.setState({ image: event.target.value });\n    }\n\n    onLanguageChange = (event) => {\n        this.setState({ lang: event.target.value });\n    }\n\n    onIsReadChange = (event) => {\n        this.setState({ isread: event.target.value });\n    }\n\n    render() {\n        console.log(this.props.book)\n        return (\n            <div>\n                <div>ADD BOOK</div>\n                <Form>\n                    <Form.Group controlId=\"formBasicText1\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control onChange={this.onTitleChange} type=\"text\" placeholder=\"Enter title\" />\n                    </Form.Group>\n\n                    <Form.Group onChange={this.onAuthorChange} controlId=\"formBasicText\">\n                        <Form.Label>Author</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Enter Author\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicText2\">\n                        <Form.Label>Image</Form.Label>\n                        <Form.Control onChange={this.onImageChange} type=\"text\" placeholder=\"Enter Image Name eg image.jpg\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicText3\">\n                        <Form.Label>Language</Form.Label>\n                        <Form.Control onChange={this.onLanguageChange} type=\"text\" placeholder=\"Enter Language\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicText4\">\n                        <Form.Label>IsRead</Form.Label>\n                        <Form.Control onChange={this.onIsReadChange} type=\"text\" placeholder=\"Have you read it?\" />\n                    </Form.Group>\n\n                    <Button\n                        onClick={this.onSubmitHandle}\n                        className=\"book-button\"\n                        variant=\"outline-light\"\n                        type=\"submit\">\n                        <NavLink to={'/add'}>\n                            Submit\n                     </NavLink>\n                    </Button>\n                </Form>\n            </div>\n        )\n    }\n\n}\n\nconst mapDispatchToProps = (dispatch, book) => {\n    return {\n        onHandleSubmit: () => dispatch(addBook(book))\n    }\n\n}\n\nexport default connect(null, mapDispatchToProps)(AddBook);"]},"metadata":{},"sourceType":"module"}