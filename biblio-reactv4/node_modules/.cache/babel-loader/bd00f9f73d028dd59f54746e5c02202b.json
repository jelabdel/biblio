{"ast":null,"code":"import axios from 'axios';\nimport { returnErrors } from './errorActions';\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR // SIGNIN_USER_SUCCESS,\n// SIGNIN_USER_FAILED,\n// LOGOUT_SUCCES,\n// SIGNUP_USER_SUCCESS,\n// SIGNUP_USER_FAILED\n} from './types'; // Check token and load user\n\nexport const loadUser = () => (dispatch, getState) => {\n  console.log('getstate', getstate()); // User loading\n\n  dispatch({\n    type: USER_LOADING\n  });\n  axios.get('http://localhost:3001/user', tokenConfig(getState)).then(res => dispatch({\n    type: USER_LOADED,\n    payload: res.data,\n    f: console.log(data)\n  })).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status));\n    dispatch({\n      type: AUTH_ERROR\n    });\n  });\n}; //Setup config/headers and token\n\nexport const tokenConfig = getState => {\n  // Get token from localstorage\n  const token = getState().auth.token; // Headers\n\n  const config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; // If token, add to headers\n\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/redux/actions/authActions.js"],"names":["axios","returnErrors","USER_LOADED","USER_LOADING","AUTH_ERROR","loadUser","dispatch","getState","console","log","getstate","type","get","tokenConfig","then","res","payload","data","f","catch","err","response","status","token","auth","config","headers"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SACIC,WADJ,EAEIC,YAFJ,EAGIC,UAHJ,CAII;AACA;AACA;AACA;AACA;AARJ,OASO,SATP,C,CAaA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBC,QAAQ,EAAhC,EADkD,CAElD;;AACAJ,EAAAA,QAAQ,CAAC;AAAEK,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AAIAH,EAAAA,KAAK,CAACY,GAAN,CAAU,4BAAV,EAAwCC,WAAW,CAACN,QAAD,CAAnD,EACKO,IADL,CACUC,GAAG,IAAIT,QAAQ,CAAC;AAClBK,IAAAA,IAAI,EAAET,WADY;AAElBc,IAAAA,OAAO,EAAED,GAAG,CAACE,IAFK;AAGlBC,IAAAA,CAAC,EAAEV,OAAO,CAACC,GAAR,CAAYQ,IAAZ;AAHe,GAAD,CADzB,EAMKE,KANL,CAMWC,GAAG,IAAI;AACVd,IAAAA,QAAQ,CAACL,YAAY,CAACmB,GAAG,CAACC,QAAJ,CAAaJ,IAAd,EAAoBG,GAAG,CAACC,QAAJ,CAAaC,MAAjC,CAAb,CAAR;AACAhB,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAGH,GAXL;AAYH,CAnBM,C,CAqBP;;AAEA,OAAO,MAAMS,WAAW,GAAGN,QAAQ,IAAI;AACnC;AACA,QAAMgB,KAAK,GAAGhB,QAAQ,GAAGiB,IAAX,CAAgBD,KAA9B,CAFmC,CAInC;;AACA,QAAME,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf,CALmC,CAWnC;;AACA,MAAIH,KAAJ,EAAW;AACPE,IAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiCH,KAAjC;AACH;;AAED,SAAOE,MAAP;AACH,CAjBM","sourcesContent":["\nimport axios from 'axios';\nimport { returnErrors } from './errorActions'\nimport {\n    USER_LOADED,\n    USER_LOADING,\n    AUTH_ERROR\n    // SIGNIN_USER_SUCCESS,\n    // SIGNIN_USER_FAILED,\n    // LOGOUT_SUCCES,\n    // SIGNUP_USER_SUCCESS,\n    // SIGNUP_USER_FAILED\n} from './types';\n\n\n\n// Check token and load user\nexport const loadUser = () => (dispatch, getState) => {\n    console.log('getstate', getstate())\n    // User loading\n    dispatch({ type: USER_LOADING });\n\n\n\n    axios.get('http://localhost:3001/user', tokenConfig(getState))\n        .then(res => dispatch({\n            type: USER_LOADED,\n            payload: res.data,\n            f: console.log(data)\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status));\n            dispatch({\n                type: AUTH_ERROR\n            })\n        })\n}\n\n//Setup config/headers and token\n\nexport const tokenConfig = getState => {\n    // Get token from localstorage\n    const token = getState().auth.token;\n\n    // Headers\n    const config = {\n        headers: {\n            \"Content-Type\": \"application/json\"\n        }\n    }\n\n    // If token, add to headers\n    if (token) {\n        config.headers['x-auth-token'] = token;\n    }\n\n    return config;\n}"]},"metadata":{},"sourceType":"module"}