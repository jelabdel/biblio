{"ast":null,"code":"var _jsxFileName = \"/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/containers/SignIn.js\";\nimport React, { Component, useState } from 'react';\nimport { clearErrors } from '../redux/actions/errorActions';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { signInUser } from '../redux/actions/authActions';\nimport propTypes from 'prop-types';\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.onSubmitHandle = event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      const user = {\n        email,\n        password\n      }; // Attempt to signin\n\n      this.props.login(user);\n    };\n\n    this.handleChange = event => {\n      // const {value, name} = event.target;\n      // dynamically set the state, using whatever is used for name eg username or password:\n      //  [name] to value\n      this.setState({\n        [event.target.name]: event.target.value\n      }); // this.setState({ [name]: value })\n    };\n\n    this.AlertError = () => {\n      const [show, setShow] = useState(true);\n\n      if (show) {\n        return /*#__PURE__*/React.createElement(Alert, {\n          variant: \"danger\",\n          onClose: () => {\n            setShow(false);\n            this.props.handleClearErrors();\n          },\n          dismissible: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }\n        }, this.props.error.msg);\n      } else return null;\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //Check for register error\n      if (error.id === 'SIGNIN_FAIL') {\n        this.setState({\n          msg: this.props.error.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmitHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, this.state.msg ? /*#__PURE__*/React.createElement(this.AlertError, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 39\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"usernameFormGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"email\",\n      type: \"text\" // value={this.state.email}\n      ,\n      onChange: this.handleChange,\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"passwordFormGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"password\",\n      type: \"password\" // value={this.state.password}\n      ,\n      onChange: this.handleChange,\n      placeholder: \"Enter password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button // onClick={this.onSubmitHandle}\n    , {\n      className: \"book-button\",\n      variant: \"outline-light\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nSignIn.propsTypes = {\n  isAthenticated: propTypes.bool,\n  error: propTypes.object.isRequired,\n  signIn: propTypes.func.isRequired,\n  clearErrors: propTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: user => dispatch(signInUser(user)),\n    handleClearErrors: () => dispatch(clearErrors())\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n  };\n}; // export default connect(\n//     mapStateToProps,\n//     { signUpUser, clearErrors }\n// )(SignUp)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/containers/SignIn.js"],"names":["React","Component","useState","clearErrors","Form","Button","connect","signInUser","propTypes","SignIn","state","email","password","msg","onSubmitHandle","event","preventDefault","user","props","login","handleChange","setState","target","name","value","AlertError","show","setShow","handleClearErrors","error","componentDidUpdate","prevProps","id","render","propsTypes","isAthenticated","bool","object","isRequired","signIn","func","mapDispatchToProps","dispatch","mapStateToProps","isAuthenticated","auth"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport { clearErrors } from '../redux/actions/errorActions';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { signInUser } from '../redux/actions/authActions';\nimport propTypes from 'prop-types';\n\n\n\n\nclass SignIn extends Component {\n\n    state = {\n        email: '',\n        password: '',\n        msg: null\n    }\n\n    static propsTypes = {\n        isAthenticated: propTypes.bool,\n        error: propTypes.object.isRequired,\n        signIn: propTypes.func.isRequired,\n        clearErrors: propTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps) {\n        const { error } = this.props;\n        if (error !== prevProps.error) {\n            //Check for register error\n            if (error.id === 'SIGNIN_FAIL') {\n                this.setState({ msg: this.props.error.msg })\n            } else { this.setState({ msg: null }) }\n        }\n    }\n\n\n\n\n\n\n    onSubmitHandle = (event) => {\n        event.preventDefault();\n        const { email, password } = this.state;\n\n        const user = {\n            email,\n            password\n        }\n        // Attempt to signin\n        this.props.login(user);\n\n    }\n\n    handleChange = (event) => {\n        // const {value, name} = event.target;\n\n        // dynamically set the state, using whatever is used for name eg username or password:\n        //  [name] to value\n        this.setState({ [event.target.name]: event.target.value })\n        // this.setState({ [name]: value })\n    }\n\n    AlertError = () => {\n        const [show, setShow] = useState(true);\n        if (show) {\n            return (\n                <Alert variant=\"danger\" onClose={() => { setShow(false); this.props.handleClearErrors() }} dismissible>{this.props.error.msg}\n                </Alert>\n            );\n\n        } else\n            return null;\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <Form onSubmit={this.onSubmitHandle}>\n                    {this.state.msg ? <this.AlertError /> : null}\n                    <h2>Sign In</h2>\n                    <Form.Group controlId=\"usernameFormGroup\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            name=\"email\"\n                            type=\"text\"\n                            // value={this.state.email}\n                            onChange={this.handleChange}\n                            placeholder=\"Enter email\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"passwordFormGroup\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            name=\"password\"\n                            type=\"password\"\n                            // value={this.state.password}\n                            onChange={this.handleChange}\n                            placeholder=\"Enter password\" />\n                    </Form.Group>\n\n                    <Button\n                        // onClick={this.onSubmitHandle}\n                        className=\"book-button\"\n                        variant=\"outline-light\"\n                        type=\"submit\">\n                        Submit\n                </Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        login: (user) => dispatch(signInUser(user)),\n        handleClearErrors: () => dispatch(clearErrors())\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        error: state.error\n    }\n\n}\n\n// export default connect(\n//     mapStateToProps,\n//     { signUpUser, clearErrors }\n// )(SignUp)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}