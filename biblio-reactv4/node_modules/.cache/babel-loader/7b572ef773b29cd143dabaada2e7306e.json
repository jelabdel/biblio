{"ast":null,"code":"import _defineProperty from \"/Users/jamala/Dropbox/Projects/BIBLIOV3/biblio-reactv3/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as actionTypes from '../actions/constants';\nconst initialState = {\n  currentUser: {},\n  isPending: false,\n  error: ''\n};\n\nconst signUPUser = (state = initialState, action = {}) => {\n  switch (action.type) {\n    case actionTypes.SIGNUP_USER_PENDING:\n      return _objectSpread({}, state, {\n        isPending: true\n      });\n\n    case actionTypes.SIGNUP_USER_SUCCESS:\n      return _objectSpread({}, state, {\n        currentUser: action.payload,\n        isPending: false\n      });\n\n    case actionTypes.SIGNUP_USER_FAILED:\n      return _objectSpread({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default signUPUser;","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV3/biblio-reactv3/src/redux/reducers/userReducer.js"],"names":["actionTypes","initialState","currentUser","isPending","error","signUPUser","state","action","type","SIGNUP_USER_PENDING","SIGNUP_USER_SUCCESS","payload","SIGNUP_USER_FAILED"],"mappings":";;;;;;AAAA,OAAO,KAAKA,WAAZ,MAA6B,sBAA7B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,SAAS,EAAE,KAFM;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;;AAOA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAM,GAAG,EAAhC,KAAuC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAW,CAACS,mBAAjB;AACI,+BAAYH,KAAZ;AAAmBH,QAAAA,SAAS,EAAE;AAA9B;;AACJ,SAAKH,WAAW,CAACU,mBAAjB;AACI,+BAAYJ,KAAZ;AAAmBJ,QAAAA,WAAW,EAAEK,MAAM,CAACI,OAAvC;AAAgDR,QAAAA,SAAS,EAAE;AAA3D;;AACJ,SAAKH,WAAW,CAACY,kBAAjB;AACI,+BAAYN,KAAZ;AAAmBF,QAAAA,KAAK,EAAEG,MAAM,CAACI,OAAjC;AAA0CR,QAAAA,SAAS,EAAE;AAArD;;AACJ;AACI,aAAOG,KAAP;AARR;AAUH,CAXD;;AAaA,eAAeD,UAAf","sourcesContent":["import * as actionTypes from '../actions/constants';\n\nconst initialState = {\n    currentUser: {},\n    isPending: false,\n    error: ''\n}\n\n\nconst signUPUser = (state = initialState, action = {}) => {\n    switch (action.type) {\n        case actionTypes.SIGNUP_USER_PENDING:\n            return { ...state, isPending: true }\n        case actionTypes.SIGNUP_USER_SUCCESS:\n            return { ...state, currentUser: action.payload, isPending: false }\n        case actionTypes.SIGNUP_USER_FAILED:\n            return { ...state, error: action.payload, isPending: false }\n        default:\n            return state;\n    }\n}\n\nexport default signUPUser;"]},"metadata":{},"sourceType":"module"}