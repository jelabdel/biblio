{"ast":null,"code":"import { SIGNIN_USER_PENDING, SIGNIN_USER_SUCCESS, SIGNIN_USER_FAILED } from './constants';\nexport const signUpUser = user => dispatch => {\n  dispatch({\n    type: SIGNUP_USER_PENDING\n  });\n  fetch('http://localhost:3001/signup', {\n    method: 'POST',\n    // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    body: JSON.stringify(user) // body data type must match \"Content-Type\" header\n\n  }).then(response => response.json()).then(data => dispatch({\n    type: SIGNUP_USER_SUCCESS,\n    payload: data\n  })).catch(error => dispatch({\n    type: SIGNUP_USER_FAILED,\n    payload: error\n  }));\n};\nexport const setCurrentUser = user => dispatch => {\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: user\n  });\n};\nexport const signOutUser = () => dispatch => {\n  dispatch({\n    type: SIGNOUT_USER\n  });\n};","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/redux/actions/userActions.js"],"names":["SIGNIN_USER_PENDING","SIGNIN_USER_SUCCESS","SIGNIN_USER_FAILED","signUpUser","user","dispatch","type","SIGNUP_USER_PENDING","fetch","method","headers","body","JSON","stringify","then","response","json","data","SIGNUP_USER_SUCCESS","payload","catch","error","SIGNUP_USER_FAILED","setCurrentUser","SET_CURRENT_USER","signOutUser","SIGNOUT_USER"],"mappings":"AAAA,SACIA,mBADJ,EAEIC,mBAFJ,EAGIC,kBAHJ,QAKO,aALP;AAUA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEC;AAAR,GAAD,CAAR;AACAC,EAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,IAAAA,MAAM,EAAE,MAD0B;AAClB;AAChBC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX,CAEL;;AAFK,KAFyB;AAMlCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,IAAf,CAN4B,CAMP;;AANO,GAAjC,CAAL,CAQKU,IARL,CAQUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARtB,EASKF,IATL,CASUG,IAAI,IAAIZ,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEY,mBAAR;AAA6BC,IAAAA,OAAO,EAAEF;AAAtC,GAAD,CAT1B,EAWKG,KAXL,CAWWC,KAAK,IAAIhB,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEgB,kBAAR;AAA4BH,IAAAA,OAAO,EAAEE;AAArC,GAAD,CAX5B;AAYH,CAdM;AAgBP,OAAO,MAAME,cAAc,GAAInB,IAAD,IAAWC,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEkB,gBAAR;AAA0BL,IAAAA,OAAO,EAAEf;AAAnC,GAAD,CAAR;AACH,CAFM;AAIP,OAAO,MAAMqB,WAAW,GAAG,MAAOpB,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEoB;AAAR,GAAD,CAAR;AACH,CAFM","sourcesContent":["import {\n    SIGNIN_USER_PENDING,\n    SIGNIN_USER_SUCCESS,\n    SIGNIN_USER_FAILED,\n\n} from './constants'\n\n\n\n\nexport const signUpUser = (user) => (dispatch) => {\n    dispatch({ type: SIGNUP_USER_PENDING })\n    fetch('http://localhost:3001/signup', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify(user) // body data type must match \"Content-Type\" header\n    })\n        .then(response => response.json())\n        .then(data => dispatch({ type: SIGNUP_USER_SUCCESS, payload: data })\n        )\n        .catch(error => dispatch({ type: SIGNUP_USER_FAILED, payload: error }))\n}\n\nexport const setCurrentUser = (user) => (dispatch) => {\n    dispatch({ type: SET_CURRENT_USER, payload: user })\n}\n\nexport const signOutUser = () => (dispatch) => {\n    dispatch({ type: SIGNOUT_USER })\n}\n"]},"metadata":{},"sourceType":"module"}