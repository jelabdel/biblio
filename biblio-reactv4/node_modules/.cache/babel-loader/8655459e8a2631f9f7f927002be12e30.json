{"ast":null,"code":"import { ADD_BOOK_PENDING, ADD_BOOK_SUCCESS, ADD_BOOK_FAILED, REQUEST_BOOKS_PENDING, REQUEST_BOOKS_SUCCESS, REQUEST_BOOKS_FAILED, LIST_BOOKS } from './types';\nexport const listBooks = (books, language) => {\n  return {\n    type: LIST_BOOKS,\n    books,\n    language\n  };\n};\nexport const addBook = book => dispatch => {\n  dispatch({\n    type: ADD_BOOK_PENDING\n  });\n  fetch('http://localhost:3001/add', {\n    method: 'POST',\n    // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    body: JSON.stringify(book) // body data type must match \"Content-Type\" header\n\n  }).then(data => dispatch({\n    type: ADD_BOOK_SUCCESS,\n    payload: data\n  })).catch(error => dispatch({\n    type: ADD_BOOK_FAILED,\n    payload: error\n  }));\n};\nexport const requestBooks = () => dispatch => {\n  dispatch({\n    type: REQUEST_BOOKS_PENDING\n  });\n  fetch('http://localhost:3001').then(response => response.json()).then(data => dispatch({\n    type: REQUEST_BOOKS_SUCCESS,\n    payload: data\n  })).catch(error => dispatch({\n    type: REQUEST_BOOKS_FAILED,\n    payload: error\n  }));\n};","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/redux/actions/libraryActions.js"],"names":["ADD_BOOK_PENDING","ADD_BOOK_SUCCESS","ADD_BOOK_FAILED","REQUEST_BOOKS_PENDING","REQUEST_BOOKS_SUCCESS","REQUEST_BOOKS_FAILED","LIST_BOOKS","listBooks","books","language","type","addBook","book","dispatch","fetch","method","headers","body","JSON","stringify","then","data","payload","catch","error","requestBooks","response","json"],"mappings":"AAAA,SACIA,gBADJ,EAEIC,gBAFJ,EAGIC,eAHJ,EAIIC,qBAJJ,EAKIC,qBALJ,EAMIC,oBANJ,EAOIC,UAPJ,QAQO,SARP;AAUA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC1C,SAAO;AACHC,IAAAA,IAAI,EAAEJ,UADH;AAEHE,IAAAA,KAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH,CANM;AASP,OAAO,MAAME,OAAO,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEV;AAAR,GAAD,CAAR;AACAc,EAAAA,KAAK,CAAC,2BAAD,EAA8B;AAC/BC,IAAAA,MAAM,EAAE,MADuB;AACf;AAChBC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX,CAEL;;AAFK,KAFsB;AAO/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAPyB,CAOJ;;AAPI,GAA9B,CAAL,CASKQ,IATL,CASUC,IAAI,IAAIR,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAET,gBAAR;AAA0BqB,IAAAA,OAAO,EAAED;AAAnC,GAAD,CAT1B,EAUKE,KAVL,CAUWC,KAAK,IAAIX,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAER,eAAR;AAAyBoB,IAAAA,OAAO,EAAEE;AAAlC,GAAD,CAV5B;AAYH,CAdM;AAgBP,OAAO,MAAMC,YAAY,GAAG,MAAOZ,QAAD,IAAc;AAC5CA,EAAAA,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEP;AAAR,GAAD,CAAR;AACAW,EAAAA,KAAK,CAAC,uBAAD,CAAL,CACKM,IADL,CACUM,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKP,IAFL,CAEUC,IAAI,IAAIR,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEN,qBAAR;AAA+BkB,IAAAA,OAAO,EAAED;AAAxC,GAAD,CAF1B,EAGKE,KAHL,CAGWC,KAAK,IAAIX,QAAQ,CAAC;AAAEH,IAAAA,IAAI,EAAEL,oBAAR;AAA8BiB,IAAAA,OAAO,EAAEE;AAAvC,GAAD,CAH5B;AAKH,CAPM","sourcesContent":["import {\n    ADD_BOOK_PENDING,\n    ADD_BOOK_SUCCESS,\n    ADD_BOOK_FAILED,\n    REQUEST_BOOKS_PENDING,\n    REQUEST_BOOKS_SUCCESS,\n    REQUEST_BOOKS_FAILED,\n    LIST_BOOKS\n} from './types';\n\nexport const listBooks = (books, language) => {\n    return {\n        type: LIST_BOOKS,\n        books,\n        language\n    }\n}\n\n\nexport const addBook = (book) => (dispatch) => {\n    dispatch({ type: ADD_BOOK_PENDING })\n    fetch('http://localhost:3001/add', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n\n        body: JSON.stringify(book) // body data type must match \"Content-Type\" header\n    })\n        .then(data => dispatch({ type: ADD_BOOK_SUCCESS, payload: data }))\n        .catch(error => dispatch({ type: ADD_BOOK_FAILED, payload: error }))\n\n}\n\nexport const requestBooks = () => (dispatch) => {\n    dispatch({ type: REQUEST_BOOKS_PENDING })\n    fetch('http://localhost:3001')\n        .then(response => response.json())\n        .then(data => dispatch({ type: REQUEST_BOOKS_SUCCESS, payload: data }))\n        .catch(error => dispatch({ type: REQUEST_BOOKS_FAILED, payload: error }))\n\n}"]},"metadata":{},"sourceType":"module"}