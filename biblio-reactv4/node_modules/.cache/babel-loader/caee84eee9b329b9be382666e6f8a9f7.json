{"ast":null,"code":"import axios from 'axiox';\nimport { returnErrors } from './errorActions';\nimport { SIGNUP_USER_PENDING, SIGNUP_USER_SUCCESS, SIGNUP_USER_FAILED, SIGNOUT_USER, SET_CURRENT_USER } from './types';\nimport Axios from 'axios';\nexport const signUpUser = user => dispatch => {\n  dispatch({\n    type: SIGNUP_USER_PENDING\n  }); // Headers\n\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  }; // Request Body\n\n  const body = {\n    body: JSON.stringify(user)\n  };\n  axios.post('http://localhost:3001/signup', body, config).then(res => dispatch({\n    type: SIGNUP_USER_SUCCESS,\n    payload: data\n  })).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n    dispatch({\n      type: SIGNUP_USER_FAILED\n    });\n  });\n};\nexport const setCurrentUser = user => dispatch => {\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: user\n  });\n};\nexport const signOutUser = () => dispatch => {\n  dispatch({\n    type: SIGNOUT_USER\n  });\n};","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/redux/actions/userActions.js"],"names":["axios","returnErrors","SIGNUP_USER_PENDING","SIGNUP_USER_SUCCESS","SIGNUP_USER_FAILED","SIGNOUT_USER","SET_CURRENT_USER","Axios","signUpUser","user","dispatch","type","config","headers","body","JSON","stringify","post","then","res","payload","data","catch","err","response","status","setCurrentUser","signOutUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,kBAJJ,EAKIC,YALJ,EAMIC,gBANJ,QAQO,SARP;AASA,OAAOC,KAAP,MAAkB,OAAlB;AAIA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAET;AAAR,GAAD,CAAR,CAD8C,CAG9C;;AACA,QAAMU,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf,CAJ8C,CAU9C;;AACA,QAAMC,IAAI,GAAG;AACTA,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AADG,GAAb;AAIAT,EAAAA,KAAK,CAACiB,IAAN,CAAW,8BAAX,EAA2CH,IAA3C,EAAiDF,MAAjD,EACKM,IADL,CACUC,GAAG,IAAIT,QAAQ,CAAC;AAClBC,IAAAA,IAAI,EAAER,mBADY;AAElBiB,IAAAA,OAAO,EAAEC;AAFS,GAAD,CADzB,EAKKC,KALL,CAKWC,GAAG,IAAI;AACVb,IAAAA,QAAQ,CAACT,YAAY,CAACsB,GAAG,CAACC,QAAJ,CAAaH,IAAd,EAAoBE,GAAG,CAACC,QAAJ,CAAaC,MAAjC,EAAyC,eAAzC,CAAb,CAAR;AACAf,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP;AADD,KAAD,CAAR;AAGH,GAVL;AAWH,CA1BM;AA4BP,OAAO,MAAMsB,cAAc,GAAIjB,IAAD,IAAWC,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL,gBAAR;AAA0Bc,IAAAA,OAAO,EAAEX;AAAnC,GAAD,CAAR;AACH,CAFM;AAIP,OAAO,MAAMkB,WAAW,GAAG,MAAOjB,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEN;AAAR,GAAD,CAAR;AACH,CAFM","sourcesContent":["import axios from 'axiox';\nimport { returnErrors } from './errorActions';\n\nimport {\n\n    SIGNUP_USER_PENDING,\n    SIGNUP_USER_SUCCESS,\n    SIGNUP_USER_FAILED,\n    SIGNOUT_USER,\n    SET_CURRENT_USER\n\n} from './types'\nimport Axios from 'axios';\n\n\n\nexport const signUpUser = (user) => (dispatch) => {\n    dispatch({ type: SIGNUP_USER_PENDING })\n\n    // Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    // Request Body\n    const body = {\n        body: JSON.stringify(user)\n    }\n\n    axios.post('http://localhost:3001/signup', body, config)\n        .then(res => dispatch({\n            type: SIGNUP_USER_SUCCESS,\n            payload: data\n        }))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n            dispatch({\n                type: SIGNUP_USER_FAILED\n            });\n        })\n}\n\nexport const setCurrentUser = (user) => (dispatch) => {\n    dispatch({ type: SET_CURRENT_USER, payload: user })\n}\n\nexport const signOutUser = () => (dispatch) => {\n    dispatch({ type: SIGNOUT_USER })\n}\n"]},"metadata":{},"sourceType":"module"}