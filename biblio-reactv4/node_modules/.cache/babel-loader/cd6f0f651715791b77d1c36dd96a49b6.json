{"ast":null,"code":"var _jsxFileName = \"/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/containers/SignUp.js\";\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUpUser } from '../redux/actions/authActions';\nimport { clearErrors } from '../redux/actions/errorActions';\nimport PropTypes from 'prop-types';\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      username: '',\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.onChangeInput = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmitHandle = event => {\n      event.preventDefault();\n      const {\n        name,\n        username,\n        email,\n        password\n      } = this.state;\n      const newUser = {\n        name,\n        username,\n        email,\n        password\n      }; // Attempt to signup/register\n\n      this.props.register(newUser); // return <Redirect to={\"#\"} />\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //Check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({\n          msg: error.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  // Show Alert with error message, when closing alert\n  // dispatch  clearError action. \n  AlertError() {\n    const [show, setShow] = useState(true);\n\n    if (show) {\n      return /*#__PURE__*/React.createElement(Alert, {\n        variant: \"danger\",\n        dismissible: true,\n        onClose: () => {\n          setShow(false);\n          this.props.handleClearErrors();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, this.state.msg);\n    }\n\n    return;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmitHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, this.state.msg ? /*#__PURE__*/React.createElement(this.AlertError, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 39\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"nameText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"name\" // value={this.state.name}\n      ,\n      onChange: this.onChangeInput,\n      type: \"text\",\n      placeholder: \"Enter name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"usernameText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"username\" // value={this.state.username}\n      ,\n      onChange: this.onChangeInput,\n      type: \"text\",\n      placeholder: \"Enter username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"emailText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"email\" // value={this.state.email}\n      ,\n      onChange: this.onChangeInput,\n      type: \"text\",\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"passwordText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"password\" // value={this.state.password}\n      ,\n      onChange: this.onChangeInput,\n      type: \"password\",\n      placeholder: \"Enter password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onSubmitHandle,\n      className: \"book-button\",\n      variant: \"outline-light\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nSignUp.propsTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  signUpUser: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    register: user => dispatch(signUpUser(user)),\n    handleClearErrors: () => dispatch(clearErrors())\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error.error\n  };\n}; // export default connect(\n//     mapStateToProps,\n//     { signUpUser, clearErrors }\n// )(SignUp)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/containers/SignUp.js"],"names":["React","useState","Form","Button","Alert","NavLink","Redirect","connect","signUpUser","clearErrors","PropTypes","SignUp","Component","state","name","username","email","password","msg","onChangeInput","event","setState","target","value","onSubmitHandle","preventDefault","newUser","props","register","componentDidUpdate","prevProps","error","id","AlertError","show","setShow","handleClearErrors","render","propsTypes","isAuthenticated","bool","object","isRequired","func","mapDispatchToProps","dispatch","user","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUpUser } from '../redux/actions/authActions';\nimport { clearErrors } from '../redux/actions/errorActions';\nimport PropTypes from 'prop-types';\n\n\nclass SignUp extends React.Component {\n    // super(props)\n    state = {\n        name: '',\n        username: '',\n        email: '',\n        password: '',\n        msg: null\n    };\n\n    static propsTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        signUpUser: PropTypes.func.isRequired,\n        clearErrors: PropTypes.func.isRequired\n    }\n\n\n    componentDidUpdate(prevProps) {\n        const { error } = this.props;\n        if (error !== prevProps.error) {\n            //Check for register error\n            if (error.id === 'REGISTER_FAIL') {\n                this.setState({ msg: error.msg })\n            } else { this.setState({ msg: null }) }\n        }\n    }\n\n    onChangeInput = (event) => {\n\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    onSubmitHandle = (event) => {\n        event.preventDefault()\n        const { name, username, email, password } = this.state;\n\n        const newUser = {\n            name,\n            username,\n            email,\n            password\n        }\n        // Attempt to signup/register\n        this.props.register(newUser)\n        // return <Redirect to={\"#\"} />\n    }\n\n    // Show Alert with error message, when closing alert\n    // dispatch  clearError action. \n    AlertError() {\n        const [show, setShow] = useState(true);\n        if (show) {\n            return (\n                <Alert variant=\"danger\" dismissible onClose={() => { setShow(false); this.props.handleClearErrors() }} >\n                    {this.state.msg}\n                </Alert>\n            );\n        }\n        return;\n    }\n\n    render() {\n        return (\n            <div>\n                < Form onSubmit={this.onSubmitHandle}>\n                    {this.state.msg ? <this.AlertError /> : null}\n                    <h2>Sign Up</h2>\n                    <Form.Group controlId=\"nameText\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            // value={this.state.name}\n                            onChange={this.onChangeInput}\n                            type=\"text\"\n                            placeholder=\"Enter name\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"usernameText\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            name=\"username\"\n                            // value={this.state.username}\n                            onChange={this.onChangeInput}\n                            type=\"text\"\n                            placeholder=\"Enter username\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"emailText\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            name=\"email\"\n                            // value={this.state.email}\n                            onChange={this.onChangeInput}\n                            type=\"text\"\n                            placeholder=\"Enter email\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"passwordText\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            name=\"password\"\n                            // value={this.state.password}\n                            onChange={this.onChangeInput}\n                            type=\"password\"\n                            placeholder=\"Enter password\" />\n                    </Form.Group>\n\n                    <Button\n                        onClick={this.onSubmitHandle}\n                        className=\"book-button\"\n                        variant=\"outline-light\"\n                        type=\"submit\">\n\n                        Submit\n\n                    </Button>\n                </Form >\n            </div >\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        register: (user) => dispatch(signUpUser(user)),\n        handleClearErrors: () => dispatch(clearErrors())\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        error: state.error.error\n    }\n\n}\n\n// export default connect(\n//     mapStateToProps,\n//     { signUpUser, clearErrors }\n// )(SignUp)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}