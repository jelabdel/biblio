{"ast":null,"code":"import * as actionTypes from '../actions/constants';\nconst initState = {\n  book: {},\n  isPending: false,\n  error: ''\n};\nexport const addBook = (state = initState, action = {}) => {\n  switch (action.type) {\n    case actionTypes.ADD_BOOK_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case actionTypes.ADD_BOOK_SUCCES:\n      console.log('action.payload: ', action.payload);\n      return Object.assign({}, state, {\n        book: action.payload,\n        isPending: false\n      });\n\n    case actionTypes.ADD_BOOK_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};\nconst booksInitialState = {\n  books: [],\n  isPending: false,\n  error: ''\n};\nexport const requestBooks = (state = booksInitialState, action = {}) => {\n  switch (action.type) {\n    case actionTypes.REQUEST_BOOKS_PENDING:\n      return Object.assign({}, state, {\n        isPending: true\n      });\n\n    case actionTypes.REQUEST_BOOKS_SUCCES:\n      return Object.assign({}, state, {\n        books: action.payload,\n        isPending: false\n      });\n\n    case actionTypes.REQUEST_BOOKS_FAILED:\n      return Object.assign({}, state, {\n        error: action.payload,\n        isPending: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV3/biblio-reactv3/src/redux/reducers/bookReducer.js"],"names":["actionTypes","initState","book","isPending","error","addBook","state","action","type","ADD_BOOK_PENDING","Object","assign","ADD_BOOK_SUCCES","console","log","payload","ADD_BOOK_FAILED","booksInitialState","books","requestBooks","REQUEST_BOOKS_PENDING","REQUEST_BOOKS_SUCCES","REQUEST_BOOKS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,sBAA7B;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,IAAI,EAAE,EADQ;AAEdC,EAAAA,SAAS,EAAE,KAFG;AAGdC,EAAAA,KAAK,EAAE;AAHO,CAAlB;AAMA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGL,SAAT,EAAoBM,MAAM,GAAG,EAA7B,KAAoC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAW,CAACS,gBAAjB;AACI,aAAOC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAzB,CAAP;;AACJ,SAAKH,WAAW,CAACY,eAAjB;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCP,MAAM,CAACQ,OAAvC;AACA,aAAOL,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEJ,QAAAA,IAAI,EAAEK,MAAM,CAACQ,OAAf;AAAwBZ,QAAAA,SAAS,EAAE;AAAnC,OAAzB,CAAP;;AACJ,SAAKH,WAAW,CAACgB,eAAjB;AACI,aAAON,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEF,QAAAA,KAAK,EAAEG,MAAM,CAACQ,OAAhB;AAAyBZ,QAAAA,SAAS,EAAE;AAApC,OAAzB,CAAP;;AACJ;AACI,aAAOG,KAAP;AATR;AAWH,CAZM;AAcP,MAAMW,iBAAiB,GAAG;AACtBC,EAAAA,KAAK,EAAE,EADe;AAEtBf,EAAAA,SAAS,EAAE,KAFW;AAGtBC,EAAAA,KAAK,EAAE;AAHe,CAA1B;AAKA,OAAO,MAAMe,YAAY,GAAG,CAACb,KAAK,GAAGW,iBAAT,EAA4BV,MAAM,GAAG,EAArC,KAA4C;AACpE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,WAAW,CAACoB,qBAAjB;AACI,aAAOV,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEH,QAAAA,SAAS,EAAE;AAAb,OAAzB,CAAP;;AACJ,SAAKH,WAAW,CAACqB,oBAAjB;AACI,aAAOX,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEY,QAAAA,KAAK,EAAEX,MAAM,CAACQ,OAAhB;AAAyBZ,QAAAA,SAAS,EAAE;AAApC,OAAzB,CAAP;;AACJ,SAAKH,WAAW,CAACsB,oBAAjB;AACI,aAAOZ,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,KAAlB,EAAyB;AAAEF,QAAAA,KAAK,EAAEG,MAAM,CAACQ,OAAhB;AAAyBZ,QAAAA,SAAS,EAAE;AAApC,OAAzB,CAAP;;AACJ;AACI,aAAOG,KAAP;AARR;AAUH,CAXM","sourcesContent":["import * as actionTypes from '../actions/constants'\n\nconst initState = {\n    book: {},\n    isPending: false,\n    error: ''\n}\n\nexport const addBook = (state = initState, action = {}) => {\n    switch (action.type) {\n        case actionTypes.ADD_BOOK_PENDING:\n            return Object.assign({}, state, { isPending: true })\n        case actionTypes.ADD_BOOK_SUCCES:\n            console.log('action.payload: ', action.payload)\n            return Object.assign({}, state, { book: action.payload, isPending: false })\n        case actionTypes.ADD_BOOK_FAILED:\n            return Object.assign({}, state, { error: action.payload, isPending: false })\n        default:\n            return state\n    }\n}\n\nconst booksInitialState = {\n    books: [],\n    isPending: false,\n    error: ''\n}\nexport const requestBooks = (state = booksInitialState, action = {}) => {\n    switch (action.type) {\n        case actionTypes.REQUEST_BOOKS_PENDING:\n            return Object.assign({}, state, { isPending: true })\n        case actionTypes.REQUEST_BOOKS_SUCCES:\n            return Object.assign({}, state, { books: action.payload, isPending: false })\n        case actionTypes.REQUEST_BOOKS_FAILED:\n            return Object.assign({}, state, { error: action.payload, isPending: false })\n        default:\n            return state\n    }\n} "]},"metadata":{},"sourceType":"module"}