{"ast":null,"code":"var _jsxFileName = \"/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/containers/Book.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { requestBooks } from '../redux/actions/libraryActions';\n\nclass Book extends Component {\n  componentDidMount() {\n    this.props.onRequestBooks();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, this.props.books.map((book, i) => {\n      return book.lang === this.props.language ? /*#__PURE__*/React.createElement(Row, {\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        lg: 4,\n        sm: 6,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 45\n        }\n      }, book.title)), /*#__PURE__*/React.createElement(NavLink, {\n        to: {\n          pathname: `/edit/${book.id}`,\n          bookProps: book\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Card.Img, {\n        variant: \"bottom\",\n        src: `../img/${book.image}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 45\n        }\n      }))))) : '';\n    })); // closing return function\n  } // closing render function\n\n\n} // closing Book class\n\n\nconst mapStateToProps = state => {\n  return {\n    books: state.requestBooks.books,\n    isPending: state.requestBooks.isPending,\n    error: state.requestBooks.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onRequestBooks: () => dispatch(requestBooks())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/containers/Book.js"],"names":["React","Component","connect","NavLink","Card","Container","Row","Col","requestBooks","Book","componentDidMount","props","onRequestBooks","render","books","map","book","i","lang","language","title","pathname","id","bookProps","image","mapStateToProps","state","isPending","error","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AAEA,SAASC,YAAT,QAA6B,iCAA7B;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAEzBS,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,KAAL,CAAWC,cAAX;AACH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,wBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKF,KAAL,CAAWG,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,CAAP,KAAa;AAC9B,aAAOD,IAAI,CAACE,IAAL,KAAc,KAAKP,KAAL,CAAWQ,QAAzB,gBACH,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEF,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IAAI,CAACI,KADV,CADJ,CADJ,eAMI,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAE;AACTC,UAAAA,QAAQ,EAAG,SAAQL,IAAI,CAACM,EAAG,EADlB;AAETC,UAAAA,SAAS,EAAEP;AAFF,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAC,QAAlB;AAA2B,QAAA,GAAG,EAAG,UAASA,IAAI,CAACQ,KAAM,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CANJ,CADJ,CADJ,CADG,GAkBD,EAlBN;AAmBH,KApBD,CAFR,CADJ,CAFK,CA4BD;AACP,GAnCwB,CAmCvB;;;AAnCuB,C,CAqC3B;;;AAEF,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHZ,IAAAA,KAAK,EAAEY,KAAK,CAAClB,YAAN,CAAmBM,KADvB;AAEHa,IAAAA,SAAS,EAAED,KAAK,CAAClB,YAAN,CAAmBmB,SAF3B;AAGHC,IAAAA,KAAK,EAAEF,KAAK,CAAClB,YAAN,CAAmBoB;AAHvB,GAAP;AAKH,CAND;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACHlB,IAAAA,cAAc,EAAE,MAAMkB,QAAQ,CAACtB,YAAY,EAAb;AAD3B,GAAP;AAIH,CALD;;AAOA,eAAeN,OAAO,CAACuB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CpB,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport { requestBooks } from '../redux/actions/libraryActions'\n\nclass Book extends Component {\n\n    componentDidMount() {\n        this.props.onRequestBooks()\n    }\n\n    render() {\n\n        return (\n            <Container>\n                {\n                    this.props.books.map((book, i) => {\n                        return book.lang === this.props.language ?\n                            <Row key={i}>\n                                <Col lg={4} sm={6}>\n                                    <Card >\n                                        <Card.Body>\n                                            <Card.Text >\n                                                {book.title}\n                                            </Card.Text>\n                                        </Card.Body>\n                                        <NavLink to={{\n                                            pathname: `/edit/${book.id}`,\n                                            bookProps: book\n                                        }}>\n                                            <Card.Img variant=\"bottom\" src={`../img/${book.image}`} />\n                                        </NavLink>\n                                    </Card>\n                                </Col>\n                            </Row>\n                            : '';\n                    })\n                }\n            </Container>\n        )   // closing return function\n    } // closing render function\n\n} // closing Book class\n\nconst mapStateToProps = state => {\n    return {\n        books: state.requestBooks.books,\n        isPending: state.requestBooks.isPending,\n        error: state.requestBooks.error\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onRequestBooks: () => dispatch(requestBooks())\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);"]},"metadata":{},"sourceType":"module"}