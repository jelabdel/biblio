{"ast":null,"code":"var _jsxFileName = \"/Users/jamala/Dropbox/Projects/BIBLIOV3/biblio-reactv3/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmitHandle = event => {\n      event.preventDefault();\n      fetch('http://localhost:3001/login', {\n        method: 'POST',\n        headers: {\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(this.state)\n      }).then(response => response.json()).then(user => {\n        if (user.id) {\n          this.setState({\n            isSignedIn: true\n          });\n          this.props.loadUser(user);\n        }\n      });\n    };\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name; // dynamically set the state, using whatever is used for name eg username or password:\n      //  [name] to value\n\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      isSignedIn: false,\n      username: '',\n      password: ''\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      username: '',\n      password: ''\n    });\n  }\n\n  render() {\n    if (this.state.isSignedIn === true) {\n      // console.log(this.state.isSignedIn)\n      return React.createElement(Redirect, {\n        push: true,\n        to: {\n          pathname: '/',\n          state: {\n            isSignedIn: true\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Form.Group, {\n      controlId: \"usernameFormGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Username\"), React.createElement(Form.Control, {\n      name: \"username\",\n      type: \"text\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      placeholder: \"Enter username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"passwordFormGroup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, \"Password\"), React.createElement(Form.Control, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      placeholder: \"Enter password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Button, {\n      onClick: this.onSubmitHandle,\n      className: \"book-button\",\n      variant: \"outline-light\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV3/biblio-reactv3/src/components/Login.js"],"names":["React","Component","Form","Button","Redirect","Login","constructor","props","onSubmitHandle","event","preventDefault","fetch","method","headers","body","JSON","stringify","state","then","response","json","user","id","setState","isSignedIn","loadUser","handleChange","target","value","name","username","password","componentDidMount","render","pathname"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport {Redirect} from 'react-router-dom';  \n\n\n\nclass Login extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            isSignedIn: false,\n            username: '',\n            password:''\n        }\n    }\n\n    componentDidMount(){\n        this.setState({\n            username: '',\n            password: ''\n        })  \n    }\n\n    onSubmitHandle = (event) => {\n        event.preventDefault();\n        fetch('http://localhost:3001/login',{\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json',\n            },\n            body: JSON.stringify(this.state)\n        })\n        .then(response => response.json())\n        .then(user => {\n            if(user.id){\n                this.setState({isSignedIn: true})\n                this.props.loadUser(user);\n            }\n        })\n            \n            \n        \n        \n    }\n\n    handleChange = (event) => {\n        const {value, name} = event.target;\n\n        // dynamically set the state, using whatever is used for name eg username or password:\n        //  [name] to value\n        this.setState({ [name]: value })\n    }\n\n\n    render(){\n        if (this.state.isSignedIn === true){\n            // console.log(this.state.isSignedIn)\n            return <Redirect push to={{\n                pathname: '/',\n                state: {isSignedIn: true}\n                }} \n            />\n\n        }\n        return(\n        <div>\n            <Form>\n                <Form.Group controlId=\"usernameFormGroup\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control \n                    name=\"username\"\n                    type=\"text\" \n                    value={this.state.username} \n                    onChange={this.handleChange} \n                    placeholder=\"Enter username\" />\n                </Form.Group>\n\n                <Form.Group  controlId=\"passwordFormGroup\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control \n                    name=\"password\"\n                    type=\"password\" \n                    value={this.state.password} \n                    onChange={this.handleChange} \n                    placeholder=\"Enter password\" />\n                </Form.Group>\n    \n                <Button \n                    onClick={this.onSubmitHandle}\n                    className=\"book-button\" \n                    variant=\"outline-light\" \n                    type=\"submit\"> \n                    Submit\n                </Button>\n            </Form>\n        </div>\n        )\n    }\n}\n\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}