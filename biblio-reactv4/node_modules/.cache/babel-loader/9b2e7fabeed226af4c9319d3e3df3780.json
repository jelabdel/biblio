{"ast":null,"code":"var _jsxFileName = \"/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/containers/SignUp.js\";\nimport React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUpUser } from '../redux/actions/userActions';\nimport PropTypes from 'prop-types';\n\nclass SignUp extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      username: '',\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.onChangeInput = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.onSubmitHandle = event => {\n      event.preventDefault();\n      const {\n        name,\n        username,\n        email,\n        password\n      } = this.state;\n      const newUser = {\n        name,\n        username,\n        email,\n        password\n      };\n      this.props.onSubmitHandle(newUser); // return <Redirect to={\"/\"} />\n    };\n\n    this.AlertError = () => {\n      const [show, setShow] = useState(true);\n\n      if (show) {\n        return /*#__PURE__*/React.createElement(Alert, {\n          variant: \"danger\",\n          onClose: () => setShow(false),\n          dismissible: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }\n        }, this.state.msg);\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //Check for registor error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({\n          msg: error.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmitHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, this.state.msg ? /*#__PURE__*/React.createElement(\"alertError\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 39\n      }\n    }) : null, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, \"Sign Up\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"nameText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"name\" // value={this.state.name}\n      ,\n      onChange: this.onChangeInput,\n      type: \"text\",\n      placeholder: \"Enter name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"usernameText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"username\" // value={this.state.username}\n      ,\n      onChange: this.onChangeInput,\n      type: \"text\",\n      placeholder: \"Enter username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"emailText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"email\" // value={this.state.email}\n      ,\n      onChange: this.onChangeInput,\n      type: \"text\",\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"passwordText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"password\" // value={this.state.password}\n      ,\n      onChange: this.onChangeInput,\n      type: \"password\",\n      placeholder: \"Enter password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.onSubmitHandle,\n      className: \"book-button\",\n      variant: \"outline-light\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }\n    }, \"Submit\"))));\n  }\n\n}\n\nSignUp.PropsTypes = {\n  isAuthenticated: PropTypes.bool,\n  error: PropTypes.object.isRequired,\n  signUpUser: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSubmitHandle: user => dispatch(signUpUser(user))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthanticated: state.auth.isAuthanticated,\n    error: state.error\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/containers/SignUp.js"],"names":["React","useState","Form","Button","Alert","NavLink","Redirect","connect","signUpUser","PropTypes","SignUp","Component","state","name","username","email","password","msg","onChangeInput","event","setState","target","value","onSubmitHandle","preventDefault","newUser","props","AlertError","show","setShow","componentDidUpdate","prevProps","error","id","render","PropsTypes","isAuthenticated","bool","object","isRequired","func","mapDispatchToProps","dispatch","user","mapStateToProps","isAuthanticated","auth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUpUser } from '../redux/actions/userActions';\n\nimport PropTypes from 'prop-types';\n\nclass SignUp extends React.Component {\n    // super(props)\n    state = {\n        name: '',\n        username: '',\n        email: '',\n        password: '',\n        msg: null\n    };\n\n    static PropsTypes = {\n        isAuthenticated: PropTypes.bool,\n        error: PropTypes.object.isRequired,\n        signUpUser: PropTypes.func.isRequired\n    }\n\n\n    componentDidUpdate(prevProps) {\n        const { error } = this.props;\n        if (error !== prevProps.error) {\n            //Check for registor error\n            if (error.id === 'REGISTER_FAIL') {\n                this.setState({ msg: error.msg })\n            } else { this.setState({ msg: null }) }\n        }\n    }\n\n    onChangeInput = (event) => {\n        this.setState({ [event.target.name]: event.target.value })\n    }\n\n    onSubmitHandle = (event) => {\n        event.preventDefault()\n\n        const { name, username, email, password } = this.state;\n\n        const newUser = {\n            name,\n            username,\n            email,\n            password\n        }\n        this.props.onSubmitHandle(newUser)\n        // return <Redirect to={\"/\"} />\n    }\n    AlertError = () => {\n        const [show, setShow] = useState(true);\n\n        if (show) {\n            return (\n                <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n                    {this.state.msg}\n                </Alert>\n            );\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n\n                < Form onSubmit={this.onSubmitHandle}>\n                    {this.state.msg ? <alertError /> : null}\n                    <h2>Sign Up</h2>\n                    <Form.Group controlId=\"nameText\">\n                        <Form.Label>Name</Form.Label>\n                        <Form.Control\n                            name=\"name\"\n                            // value={this.state.name}\n                            onChange={this.onChangeInput}\n                            type=\"text\"\n                            placeholder=\"Enter name\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"usernameText\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            name=\"username\"\n                            // value={this.state.username}\n                            onChange={this.onChangeInput}\n                            type=\"text\"\n                            placeholder=\"Enter username\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"emailText\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            name=\"email\"\n                            // value={this.state.email}\n                            onChange={this.onChangeInput}\n                            type=\"text\"\n                            placeholder=\"Enter email\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"passwordText\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            name=\"password\"\n                            // value={this.state.password}\n                            onChange={this.onChangeInput}\n                            type=\"password\"\n                            placeholder=\"Enter password\" />\n                    </Form.Group>\n\n                    <Button\n                        onClick={this.onSubmitHandle}\n                        className=\"book-button\"\n                        variant=\"outline-light\"\n                        type=\"submit\">\n                        <NavLink to=\"#\">\n                            Submit\n                            </NavLink>\n                    </Button>\n                </Form >\n            </div >\n        )\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onSubmitHandle: (user) => dispatch(signUpUser(user))\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthanticated: state.auth.isAuthanticated,\n        error: state.error\n    }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp);\n"]},"metadata":{},"sourceType":"module"}