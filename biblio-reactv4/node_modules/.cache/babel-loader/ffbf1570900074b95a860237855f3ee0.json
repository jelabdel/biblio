{"ast":null,"code":"import * as actionTypes from './constants';\nexport const listBooks = (books, language) => {\n  return {\n    type: actionTyopes.LIST_BOOKS,\n    books,\n    language\n  };\n};\nexport const addBook = book => ({\n  type: actionTypes.ADD_BOOK,\n  payload: {\n    book: book\n  }\n});\nexport const requestBooks = dispatch => {\n  dispatch({\n    type: actionTypes.REQUEST_BOOKS_PENDING\n  });\n  fetch('http://localhost:3001').then(response => response.json()).then(data => dispatch({\n    type: actionTypes.REQUEST_BOOKS_SUCCES,\n    payload: data\n  })).catch(error => dispatch({\n    type: actionTypes.REQUEST_BOOKS_FAILED,\n    payload: error\n  }));\n};","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV3/biblio-reactv3/src/redux/actions/libraryActions.js"],"names":["actionTypes","listBooks","books","language","type","actionTyopes","LIST_BOOKS","addBook","book","ADD_BOOK","payload","requestBooks","dispatch","REQUEST_BOOKS_PENDING","fetch","then","response","json","data","REQUEST_BOOKS_SUCCES","catch","error","REQUEST_BOOKS_FAILED"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,aAA7B;AAEA,OAAO,MAAMC,SAAS,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC1C,SAAO;AACHC,IAAAA,IAAI,EAAEC,YAAY,CAACC,UADhB;AAEHJ,IAAAA,KAFG;AAGHC,IAAAA;AAHG,GAAP;AAKH,CANM;AASP,OAAO,MAAMI,OAAO,GAAIC,IAAD,KAAW;AAC9BJ,EAAAA,IAAI,EAAEJ,WAAW,CAACS,QADY;AAE9BC,EAAAA,OAAO,EAAE;AACLF,IAAAA,IAAI,EAAEA;AADD;AAFqB,CAAX,CAAhB;AAOP,OAAO,MAAMG,YAAY,GAAIC,QAAD,IAAc;AACtCA,EAAAA,QAAQ,CAAC;AAAER,IAAAA,IAAI,EAAEJ,WAAW,CAACa;AAApB,GAAD,CAAR;AACAC,EAAAA,KAAK,CAAC,uBAAD,CAAL,CACKC,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIN,QAAQ,CAAC;AAAER,IAAAA,IAAI,EAAEJ,WAAW,CAACmB,oBAApB;AAA0CT,IAAAA,OAAO,EAAEQ;AAAnD,GAAD,CAF1B,EAGKE,KAHL,CAGWC,KAAK,IAAIT,QAAQ,CAAC;AAAER,IAAAA,IAAI,EAAEJ,WAAW,CAACsB,oBAApB;AAA0CZ,IAAAA,OAAO,EAAEW;AAAnD,GAAD,CAH5B;AAIH,CANM","sourcesContent":["import * as actionTypes from './constants'\n\nexport const listBooks = (books, language) => {\n    return {\n        type: actionTyopes.LIST_BOOKS,\n        books,\n        language\n    }\n}\n\n\nexport const addBook = (book) => ({\n    type: actionTypes.ADD_BOOK,\n    payload: {\n        book: book\n    }\n})\n\nexport const requestBooks = (dispatch) => {\n    dispatch({ type: actionTypes.REQUEST_BOOKS_PENDING })\n    fetch('http://localhost:3001')\n        .then(response => response.json())\n        .then(data => dispatch({ type: actionTypes.REQUEST_BOOKS_SUCCES, payload: data }))\n        .catch(error => dispatch({ type: actionTypes.REQUEST_BOOKS_FAILED, payload: error }))\n}"]},"metadata":{},"sourceType":"module"}