{"ast":null,"code":"import axios from 'axios';\nimport { returnErrors } from './errorActions';\nimport { SIGNUP_USER_PENDING, SIGNUP_USER_SUCCESS, SIGNUP_USER_FAILED, SIGNOUT_USER, SET_CURRENT_USER } from './types'; // import { signUpUser } from '..reducers/signUpUser';\n\n/*\n    dispatch({ type: ADD_BOOK_PENDING })\n    fetch('http://localhost:3001/add', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n\n        body: JSON.stringify(book) // body data type must match \"Content-Type\" header\n    })\n        .then(data => dispatch({ type: ADD_BOOK_SUCCESS, payload: data }))\n        .catch(error => dispatch({ type: ADD_BOOK_FAILED, payload: error }))\n\n}\n\n*/\n\nexport const signUpUser = user => dispatch => {\n  dispatch({\n    type: SIGNUP_USER_PENDING\n  });\n  fetch('http://localhost:3001/signup', {\n    method: 'POST',\n    // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    body: JSON.stringify(user) // body data type must match \"Content-Type\" header\n\n  }).then(data => dispatch({\n    type: SIGNUP_USER_SUCCESS,\n    payload: data\n  })).catch(err => {\n    console.log('err from catch:', err);\n    dispatch({\n      type: SIGNUP_USER_FAILED,\n      payload: err\n    });\n    dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n  });\n}; // export const signUpUser = (user) => (dispatch) => {\n//     dispatch({ type: SIGNUP_USER_PENDING })\n//     // Headers\n//     const config = {\n//         headers: {\n//             'Content-Type': 'application/json'\n//         }\n//     }\n//     // Request Body\n//     const body = {\n//         body: JSON.stringify(user)\n//     }\n//     axios.post('http://localhost:3001/signup', body, config)\n//         .then(res => dispatch({\n//             type: SIGNUP_USER_SUCCESS,\n//             payload: res.data\n//         }))\n//         .catch(err => {\n//             dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n//             dispatch({\n//                 type: SIGNUP_USER_FAILED\n//             });\n//         })\n// }\n\nexport const setCurrentUser = user => dispatch => {\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: user\n  });\n};\nexport const signOutUser = () => dispatch => {\n  dispatch({\n    type: SIGNOUT_USER\n  });\n};","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/redux/actions/userActions.js"],"names":["axios","returnErrors","SIGNUP_USER_PENDING","SIGNUP_USER_SUCCESS","SIGNUP_USER_FAILED","SIGNOUT_USER","SET_CURRENT_USER","signUpUser","user","dispatch","type","fetch","method","headers","body","JSON","stringify","then","data","payload","catch","err","console","log","response","status","setCurrentUser","signOutUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,kBAJJ,EAKIC,YALJ,EAMIC,gBANJ,QAQO,SARP,C,CASA;;AAEA;;;;;;;;;;;;;;;;;;AAkBA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACAS,EAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,IAAAA,MAAM,EAAE,MAD0B;AAClB;AAChBC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX,CAEL;;AAFK,KAFyB;AAOlCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAP4B,CAOP;;AAPO,GAAjC,CAAL,CASKS,IATL,CASUC,IAAI,IAAIT,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,mBAAR;AAA6BgB,IAAAA,OAAO,EAAED;AAAtC,GAAD,CAT1B,EAUKE,KAVL,CAUWC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BF,GAA/B;AACAZ,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEN,kBAAR;AAA4Be,MAAAA,OAAO,EAAEE;AAArC,KAAD,CAAR;AACAZ,IAAAA,QAAQ,CAACR,YAAY,CAACoB,GAAG,CAACG,QAAJ,CAAaN,IAAd,EAAoBG,GAAG,CAACG,QAAJ,CAAaC,MAAjC,EAAyC,eAAzC,CAAb,CAAR;AACH,GAdL;AAgBH,CAlBM,C,CAuBP;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA,OAAO,MAAMC,cAAc,GAAIlB,IAAD,IAAWC,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ,gBAAR;AAA0Ba,IAAAA,OAAO,EAAEX;AAAnC,GAAD,CAAR;AACH,CAFM;AAIP,OAAO,MAAMmB,WAAW,GAAG,MAAOlB,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACH,CAFM","sourcesContent":["import axios from 'axios';\nimport { returnErrors } from './errorActions';\n\nimport {\n\n    SIGNUP_USER_PENDING,\n    SIGNUP_USER_SUCCESS,\n    SIGNUP_USER_FAILED,\n    SIGNOUT_USER,\n    SET_CURRENT_USER\n\n} from './types';\n// import { signUpUser } from '..reducers/signUpUser';\n\n/*\n    dispatch({ type: ADD_BOOK_PENDING })\n    fetch('http://localhost:3001/add', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n\n        body: JSON.stringify(book) // body data type must match \"Content-Type\" header\n    })\n        .then(data => dispatch({ type: ADD_BOOK_SUCCESS, payload: data }))\n        .catch(error => dispatch({ type: ADD_BOOK_FAILED, payload: error }))\n\n}\n\n*/\n\nexport const signUpUser = (user) => (dispatch) => {\n    dispatch({ type: SIGNUP_USER_PENDING })\n    fetch('http://localhost:3001/signup', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n\n        body: JSON.stringify(user) // body data type must match \"Content-Type\" header\n    })\n        .then(data => dispatch({ type: SIGNUP_USER_SUCCESS, payload: data }))\n        .catch(err => {\n            console.log('err from catch:', err)\n            dispatch({ type: SIGNUP_USER_FAILED, payload: err })\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'))\n        })\n\n}\n\n\n\n\n// export const signUpUser = (user) => (dispatch) => {\n//     dispatch({ type: SIGNUP_USER_PENDING })\n\n//     // Headers\n//     const config = {\n//         headers: {\n//             'Content-Type': 'application/json'\n//         }\n//     }\n\n//     // Request Body\n//     const body = {\n//         body: JSON.stringify(user)\n//     }\n\n//     axios.post('http://localhost:3001/signup', body, config)\n//         .then(res => dispatch({\n//             type: SIGNUP_USER_SUCCESS,\n//             payload: res.data\n//         }))\n//         .catch(err => {\n//             dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n//             dispatch({\n//                 type: SIGNUP_USER_FAILED\n//             });\n//         })\n// }\n\n\n\n\nexport const setCurrentUser = (user) => (dispatch) => {\n    dispatch({ type: SET_CURRENT_USER, payload: user })\n}\n\nexport const signOutUser = () => (dispatch) => {\n    dispatch({ type: SIGNOUT_USER })\n}\n"]},"metadata":{},"sourceType":"module"}