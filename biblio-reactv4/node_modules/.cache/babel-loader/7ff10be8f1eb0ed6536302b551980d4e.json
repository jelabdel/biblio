{"ast":null,"code":"var _jsxFileName = \"/Users/jamala/Dropbox/Projects/BIBLIOV3/biblio-reactv3/src/containers/Book.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as bookActions from '../redux/actions/libraryActions';\nimport { NavLink } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass Book extends Component {\n  // constructor(props) {\n  //     super(props)\n  //     this.state = {\n  //         books: []\n  //     }\n  // }\n  // book={book} to={'/edit/' + book.id}\n  // componentDidMount(){\n  //     fetch('http://localhost:3001')\n  //     .then(response => response.json())\n  //     .then( data => {\n  //         // console.log(data)\n  //         this.setState({\n  //             books: [ ...data]\n  //         })  \n  //     })\n  // }\n  render() {\n    console.log(this.props);\n    this.props.listBooks(this.props.books, this.props.language);\n    console.log('filteredBooks', this.props.filteredBooks); // console.log('filteredBooks', this.props.library.books)\n\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, this.props.listBooks(this.props.books, this.props.language).map((book, i) => {\n      return React.createElement(Row, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 4,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(Card.Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, book.title)), React.createElement(NavLink, {\n        to: {\n          pathname: \"/edit/\".concat(book.id),\n          bookProps: book\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Card.Img, {\n        variant: \"bottom\",\n        src: \"../img/\".concat(book.img),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })))));\n    })); // closing return function\n  } // closing render function\n\n\n} // closing Book class\n\n\nconst mapStateToProps = state => {\n  return {\n    books: state.library.books,\n    filteredBooks: state.library.filteredBooks\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    listBooks: (books, language) => {\n      dispatch(bookActions.listBooks(books, language));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV3/biblio-reactv3/src/containers/Book.js"],"names":["React","Component","connect","bookActions","NavLink","Card","Container","Row","Col","Book","render","console","log","props","listBooks","books","language","filteredBooks","map","book","i","title","pathname","id","bookProps","img","mapStateToProps","state","library","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,iCAA7B;AAEA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGAS,EAAAA,MAAM,GAAG;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAEA,SAAKA,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,KAAhC,EAAuC,KAAKF,KAAL,CAAWG,QAAlD;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKC,KAAL,CAAWI,aAAxC,EAJK,CAKL;;AACA,WACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQ,KAAKJ,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWE,KAAhC,EAAuC,KAAKF,KAAL,CAAWG,QAAlD,EAA4DE,GAA5D,CAAgE,CAACC,IAAD,EAAOC,CAAP,KAAa;AACzE,aACI,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAEA,CAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,IAAI,CAACE,KADV,CADJ,CADJ,EAMI,oBAAC,OAAD;AAAS,QAAA,EAAE,EAAE;AACTC,UAAAA,QAAQ,kBAAWH,IAAI,CAACI,EAAhB,CADC;AAETC,UAAAA,SAAS,EAAEL;AAFF,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAII,oBAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAC,QAAlB;AAA2B,QAAA,GAAG,mBAAYA,IAAI,CAACM,GAAjB,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CANJ,CAFJ,CADJ,CADJ;AAsBH,KAvBD,CAFR,CADJ,CANK,CAmCD;AACP,GAzDwB,CAyDvB;;;AAzDuB,C,CA2D3B;;;AAGF,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHZ,IAAAA,KAAK,EAAEY,KAAK,CAACC,OAAN,CAAcb,KADlB;AAEHE,IAAAA,aAAa,EAAEU,KAAK,CAACC,OAAN,CAAcX;AAF1B,GAAP;AAIH,CALD;;AAOA,MAAMY,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHhB,IAAAA,SAAS,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAAEc,MAAAA,QAAQ,CAAC3B,WAAW,CAACW,SAAZ,CAAsBC,KAAtB,EAA6BC,QAA7B,CAAD,CAAR;AAAkD;AADjF,GAAP;AAGH,CAJD;;AAMA,eAAed,OAAO,CAACwB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpB,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as bookActions from '../redux/actions/libraryActions';\n\nimport { NavLink } from 'react-router-dom';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nclass Book extends Component {\n    // constructor(props) {\n    //     super(props)\n    //     this.state = {\n    //         books: []\n    //     }\n    // }\n    // book={book} to={'/edit/' + book.id}\n\n    // componentDidMount(){\n    //     fetch('http://localhost:3001')\n    //     .then(response => response.json())\n    //     .then( data => {\n    //         // console.log(data)\n    //         this.setState({\n    //             books: [ ...data]\n    //         })  \n    //     })\n    // }\n\n\n    render() {\n        console.log(this.props)\n\n        this.props.listBooks(this.props.books, this.props.language)\n        console.log('filteredBooks', this.props.filteredBooks)\n        // console.log('filteredBooks', this.props.library.books)\n        return (\n            <Container>\n                {\n                    this.props.listBooks(this.props.books, this.props.language).map((book, i) => {\n                        return (\n                            <Row key={i}>\n                                <Col lg={4} sm={6}>\n\n                                    <Card >\n                                        <Card.Body>\n                                            <Card.Text >\n                                                {book.title}\n                                            </Card.Text>\n                                        </Card.Body>\n                                        <NavLink to={{\n                                            pathname: `/edit/${book.id}`,\n                                            bookProps: book\n                                        }}>\n                                            <Card.Img variant=\"bottom\" src={`../img/${book.img}`} />\n                                        </NavLink>\n                                    </Card>\n\n\n                                </Col>\n                            </Row>\n                        )\n                    })\n                }\n            </Container>\n        )   // closing return function\n    } // closing render function\n\n} // closing Book class\n\n\nconst mapStateToProps = state => {\n    return {\n        books: state.library.books,\n        filteredBooks: state.library.filteredBooks\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        listBooks: (books, language) => { dispatch(bookActions.listBooks(books, language)) }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Book);"]},"metadata":{},"sourceType":"module"}