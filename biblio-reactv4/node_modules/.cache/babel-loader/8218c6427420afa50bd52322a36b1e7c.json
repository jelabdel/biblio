{"ast":null,"code":"var _jsxFileName = \"/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/containers/SignIn.js\";\nimport React, { Component } from 'react';\nimport { clearErrors } from '../redux/actions/errorActions';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { signInUser } from '../redux/actions/authActions';\nimport propTypes from 'prop-types';\n\nclass SignIn extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      email: '',\n      password: '',\n      msg: null\n    };\n\n    this.onSubmitHandle = event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n      this.props.login({\n        email,\n        password\n      });\n    };\n\n    this.handleChange = event => {\n      // const {value, name} = event.target;\n      // dynamically set the state, using whatever is used for name eg username or password:\n      //  [name] to value\n      this.setState({\n        [event.target.name]: event.target.value\n      }); // this.setState({ [name]: value })\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      error\n    } = this.props;\n\n    if (error !== prevProps.error) {\n      //Check for register error\n      if (error.id === 'SIGNIN_FAIL') {\n        this.setState({\n          msg: this.props.error.msg\n        });\n      } else {\n        this.setState({\n          msg: null\n        });\n      }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.onSubmitHandle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Sign In\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"usernameFormGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"email\",\n      type: \"text\" // value={this.state.email}\n      ,\n      onChange: this.handleChange,\n      placeholder: \"Enter email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"passwordFormGroup\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      name: \"password\",\n      type: \"password\" // value={this.state.password}\n      ,\n      onChange: this.handleChange,\n      placeholder: \"Enter password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Button // onClick={this.onSubmitHandle}\n    , {\n      className: \"book-button\",\n      variant: \"outline-light\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nSignIn.propsTypes = {\n  isAthenticated: propTypes.bool,\n  error: propTypes.object.isRequired,\n  signIn: propTypes.func.isRequired,\n  clearErrors: propTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: (email, password) => dispatch(signInUser(email, password)),\n    handleClearErrors: () => dispatch(clearErrors())\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.isAuthenticated,\n    error: state.error\n  };\n}; // export default connect(\n//     mapStateToProps,\n//     { signUpUser, clearErrors }\n// )(SignUp)\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/containers/SignIn.js"],"names":["React","Component","clearErrors","Form","Button","connect","signInUser","propTypes","SignIn","state","email","password","msg","onSubmitHandle","event","preventDefault","props","login","handleChange","setState","target","name","value","componentDidUpdate","prevProps","error","id","render","propsTypes","isAthenticated","bool","object","isRequired","signIn","func","mapDispatchToProps","dispatch","handleClearErrors","mapStateToProps","isAuthenticated","auth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { clearErrors } from '../redux/actions/errorActions';\nimport { Form, Button } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { signInUser } from '../redux/actions/authActions';\nimport propTypes from 'prop-types';\n\n\n\n\nclass SignIn extends Component {\n\n    state = {\n        email: '',\n        password: '',\n        msg: null\n    }\n\n    static propsTypes = {\n        isAthenticated: propTypes.bool,\n        error: propTypes.object.isRequired,\n        signIn: propTypes.func.isRequired,\n        clearErrors: propTypes.func.isRequired\n    }\n\n    componentDidUpdate(prevProps) {\n        const { error } = this.props;\n        if (error !== prevProps.error) {\n            //Check for register error\n            if (error.id === 'SIGNIN_FAIL') {\n                this.setState({ msg: this.props.error.msg })\n            } else { this.setState({ msg: null }) }\n        }\n    }\n\n\n\n\n\n\n    onSubmitHandle = (event) => {\n        event.preventDefault();\n        const { email, password } = this.state;\n        this.props.login({ email, password });\n\n    }\n\n    handleChange = (event) => {\n        // const {value, name} = event.target;\n\n        // dynamically set the state, using whatever is used for name eg username or password:\n        //  [name] to value\n        this.setState({ [event.target.name]: event.target.value })\n        // this.setState({ [name]: value })\n    }\n\n\n    render() {\n\n        return (\n            <div>\n                <Form onSubmit={this.onSubmitHandle}>\n                    <h2>Sign In</h2>\n                    <Form.Group controlId=\"usernameFormGroup\">\n                        <Form.Label>Email</Form.Label>\n                        <Form.Control\n                            name=\"email\"\n                            type=\"text\"\n                            // value={this.state.email}\n                            onChange={this.handleChange}\n                            placeholder=\"Enter email\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"passwordFormGroup\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            name=\"password\"\n                            type=\"password\"\n                            // value={this.state.password}\n                            onChange={this.handleChange}\n                            placeholder=\"Enter password\" />\n                    </Form.Group>\n\n                    <Button\n                        // onClick={this.onSubmitHandle}\n                        className=\"book-button\"\n                        variant=\"outline-light\"\n                        type=\"submit\">\n                        Submit\n                </Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        login: (email, password) => dispatch(signInUser(email, password)),\n        handleClearErrors: () => dispatch(clearErrors())\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuthenticated: state.auth.isAuthenticated,\n        error: state.error\n    }\n\n}\n\n// export default connect(\n//     mapStateToProps,\n//     { signUpUser, clearErrors }\n// )(SignUp)\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn);\n"]},"metadata":{},"sourceType":"module"}