{"ast":null,"code":"import axios from 'axios';\nimport { returnErrors } from './errorActions';\nimport { SIGNUP_USER_PENDING, SIGNUP_USER_SUCCESS, SIGNUP_USER_FAILED, SIGNOUT_USER, SET_CURRENT_USER } from './types'; // import { signUpUser } from '..reducers/signUpUser';\n\n/*\n    dispatch({ type: ADD_BOOK_PENDING })\n    fetch('http://localhost:3001/add', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n\n        body: JSON.stringify(book) // body data type must match \"Content-Type\" header\n    })\n        .then(data => dispatch({ type: ADD_BOOK_SUCCESS, payload: data }))\n        .catch(error => dispatch({ type: ADD_BOOK_FAILED, payload: error }))\n\n}\n\n*/\n\n/* \nexport const signUpUser = (user) => (dispatch) => {\n    dispatch({ type: SIGNUP_USER_PENDING })\n    fetch('http://localhost:3001/signup', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n\n        body: JSON.stringify(user) // body data type must match \"Content-Type\" header\n    })\n        .then(data => dispatch({ type: SIGNUP_USER_SUCCESS, payload: data }))\n        .catch(err => {\n            console.log('err from catch:', err)\n            dispatch({ type: SIGNUP_USER_FAILED, payload: err })\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'))\n        })\n\n}\n*/\n\n/*\nexport const signUpUser = (user) => (dispatch) => {\n    dispatch({ type: SIGNUP_USER_PENDING })\n\n    // Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    // Request Body\n    const body = {\n        body: JSON.stringify(user)\n    }\n\n    axios.post('http://localhost:3001/signup', body, config)\n        .then(res => dispatch({\n            type: SIGNUP_USER_SUCCESS,\n            payload: res.data\n        }))\n        .then(payload => console.log('test:', payload))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n            dispatch({\n                type: SIGNUP_USER_FAILED\n            });\n        })\n}\n*/\n\nexport const setCurrentUser = user => dispatch => {\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: user\n  });\n};\nexport const signOutUser = () => dispatch => {\n  dispatch({\n    type: SIGNOUT_USER\n  });\n};","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/redux/actions/userActions.js"],"names":["axios","returnErrors","SIGNUP_USER_PENDING","SIGNUP_USER_SUCCESS","SIGNUP_USER_FAILED","SIGNOUT_USER","SET_CURRENT_USER","setCurrentUser","user","dispatch","type","payload","signOutUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAEA,SAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,kBAJJ,EAKIC,YALJ,EAMIC,gBANJ,QAQO,SARP,C,CASA;;AAEA;;;;;;;;;;;;;;;;;;AAkBA;;;;;;;;;;;;;;;;;;;;;;AAyBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,OAAO,MAAMC,cAAc,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ,gBAAR;AAA0BK,IAAAA,OAAO,EAAEH;AAAnC,GAAD,CAAR;AACH,CAFM;AAIP,OAAO,MAAMI,WAAW,GAAG,MAAOH,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACH,CAFM","sourcesContent":["import axios from 'axios';\nimport { returnErrors } from './errorActions';\n\nimport {\n\n    SIGNUP_USER_PENDING,\n    SIGNUP_USER_SUCCESS,\n    SIGNUP_USER_FAILED,\n    SIGNOUT_USER,\n    SET_CURRENT_USER\n\n} from './types';\n// import { signUpUser } from '..reducers/signUpUser';\n\n/*\n    dispatch({ type: ADD_BOOK_PENDING })\n    fetch('http://localhost:3001/add', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n\n        body: JSON.stringify(book) // body data type must match \"Content-Type\" header\n    })\n        .then(data => dispatch({ type: ADD_BOOK_SUCCESS, payload: data }))\n        .catch(error => dispatch({ type: ADD_BOOK_FAILED, payload: error }))\n\n}\n\n*/\n\n/* \nexport const signUpUser = (user) => (dispatch) => {\n    dispatch({ type: SIGNUP_USER_PENDING })\n    fetch('http://localhost:3001/signup', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n\n        body: JSON.stringify(user) // body data type must match \"Content-Type\" header\n    })\n        .then(data => dispatch({ type: SIGNUP_USER_SUCCESS, payload: data }))\n        .catch(err => {\n            console.log('err from catch:', err)\n            dispatch({ type: SIGNUP_USER_FAILED, payload: err })\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'))\n        })\n\n}\n*/\n\n\n\n\n/*\nexport const signUpUser = (user) => (dispatch) => {\n    dispatch({ type: SIGNUP_USER_PENDING })\n\n    // Headers\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    }\n\n    // Request Body\n    const body = {\n        body: JSON.stringify(user)\n    }\n\n    axios.post('http://localhost:3001/signup', body, config)\n        .then(res => dispatch({\n            type: SIGNUP_USER_SUCCESS,\n            payload: res.data\n        }))\n        .then(payload => console.log('test:', payload))\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n            dispatch({\n                type: SIGNUP_USER_FAILED\n            });\n        })\n}\n*/\n\n\n\nexport const setCurrentUser = (user) => (dispatch) => {\n    dispatch({ type: SET_CURRENT_USER, payload: user })\n}\n\nexport const signOutUser = () => (dispatch) => {\n    dispatch({ type: SIGNOUT_USER })\n}\n"]},"metadata":{},"sourceType":"module"}