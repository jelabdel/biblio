{"ast":null,"code":"import { returnErrors } from './errorActions';\nimport { SIGNUP_USER_PENDING, SIGNUP_USER_SUCCESS, SIGNUP_USER_FAILED, SIGNOUT_USER, SET_CURRENT_USER } from './types';\nexport const signUpUser = user => dispatch => {\n  dispatch({\n    type: SIGNUP_USER_PENDING\n  });\n  fetch('http://localhost:3001/signup', {\n    method: 'POST',\n    // *GET, POST, PUT, DELETE, etc.\n    headers: {\n      'Content-Type': 'application/json' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n    },\n    body: JSON.stringify(user) // body data type must match \"Content-Type\" header\n\n  }).then(response => response.json()).then(data => dispatch({\n    type: SIGNUP_USER_SUCCESS,\n    payload: data\n  })).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n    dispatch({\n      type: SIGNUP_USER_FAILED\n    });\n  });\n};\nexport const setCurrentUser = user => dispatch => {\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: user\n  });\n};\nexport const signOutUser = () => dispatch => {\n  dispatch({\n    type: SIGNOUT_USER\n  });\n};","map":{"version":3,"sources":["/Users/jamala/Dropbox/Projects/BIBLIOV4/biblio-reactv4/src/redux/actions/userActions.js"],"names":["returnErrors","SIGNUP_USER_PENDING","SIGNUP_USER_SUCCESS","SIGNUP_USER_FAILED","SIGNOUT_USER","SET_CURRENT_USER","signUpUser","user","dispatch","type","fetch","method","headers","body","JSON","stringify","then","response","json","data","payload","catch","err","status","setCurrentUser","signOutUser"],"mappings":"AAAA,SAASA,YAAT,QAA6B,gBAA7B;AAEA,SAEIC,mBAFJ,EAGIC,mBAHJ,EAIIC,kBAJJ,EAKIC,YALJ,EAMIC,gBANJ,QAQO,SARP;AAYA,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAWC,QAAD,IAAc;AAC9CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;AACAS,EAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,IAAAA,MAAM,EAAE,MAD0B;AAClB;AAChBC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX,CAEL;;AAFK,KAFyB;AAMlCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAN4B,CAMP;;AANO,GAAjC,CAAL,CAQKS,IARL,CAQUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARtB,EASKF,IATL,CASUG,IAAI,IAAIX,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEP,mBAAR;AAA6BkB,IAAAA,OAAO,EAAED;AAAtC,GAAD,CAT1B,EAWKE,KAXL,CAWWC,GAAG,IAAI;AACVd,IAAAA,QAAQ,CAACR,YAAY,CAACsB,GAAG,CAACL,QAAJ,CAAaE,IAAd,EAAoBG,GAAG,CAACL,QAAJ,CAAaM,MAAjC,EAAyC,eAAzC,CAAb,CAAR;AACAf,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN;AADD,KAAD,CAAR;AAGH,GAhBL;AAiBH,CAnBM;AAqBP,OAAO,MAAMqB,cAAc,GAAIjB,IAAD,IAAWC,QAAD,IAAc;AAClDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEJ,gBAAR;AAA0Be,IAAAA,OAAO,EAAEb;AAAnC,GAAD,CAAR;AACH,CAFM;AAIP,OAAO,MAAMkB,WAAW,GAAG,MAAOjB,QAAD,IAAc;AAC3CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEL;AAAR,GAAD,CAAR;AACH,CAFM","sourcesContent":["import { returnErrors } from './errorActions';\n\nimport {\n\n    SIGNUP_USER_PENDING,\n    SIGNUP_USER_SUCCESS,\n    SIGNUP_USER_FAILED,\n    SIGNOUT_USER,\n    SET_CURRENT_USER\n\n} from './types'\n\n\n\nexport const signUpUser = (user) => (dispatch) => {\n    dispatch({ type: SIGNUP_USER_PENDING })\n    fetch('http://localhost:3001/signup', {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        headers: {\n            'Content-Type': 'application/json'\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: JSON.stringify(user) // body data type must match \"Content-Type\" header\n    })\n        .then(response => response.json())\n        .then(data => dispatch({ type: SIGNUP_USER_SUCCESS, payload: data })\n        )\n        .catch(err => {\n            dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n            dispatch({\n                type: SIGNUP_USER_FAILED\n            });\n        })\n}\n\nexport const setCurrentUser = (user) => (dispatch) => {\n    dispatch({ type: SET_CURRENT_USER, payload: user })\n}\n\nexport const signOutUser = () => (dispatch) => {\n    dispatch({ type: SIGNOUT_USER })\n}\n"]},"metadata":{},"sourceType":"module"}